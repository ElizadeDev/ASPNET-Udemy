@model CityWeather
@{
    //local function: get css class based on ranges of fahrenheit value as instructed in the requirement
    string GetCssClassByFahrenheit(int TemperatureFahrenheit)
    {
        return TemperatureFahrenheit switch
        {
            (< 44) => "blue-back",
            (>= 44) and (< 75) => "green-back",
            (>= 75) => "orange-back"
        };
    }
}
<!DOCTYPE html>

<html>
<head>
 <meta name="viewport" content="width=device-width" />
 <title>@Model.CityName City Weather</title>
 <link href="~/StyleSheet1.css" rel="stylesheet" />
</head>
<body>
 <div class="container">
  <div class="page-content">
   <div class="margin-bottom">
    <h1>Weather</h1>
   </div>

   @if (Model != null)
   {
    <div class="box cursor-pointer w-30 margin-auto margin-top-200 @GetCssClassByFahrenheit(Model.TemperatureFahrenheit)">
     <div class="flex-borderless">
      <div class="w-50">
       <h2>@Model.CityName</h2>
       <h4 class="text-grey">@Model.DateAndTime.ToString("dd MMM yyyy")</h4>
       <h4 class="text-grey">@Model.DateAndTime.ToString("hh:mm tt")</h4>
      </div>
      <div class="w-50 border-left">
       <h1 class="margin-left">@Model.TemperatureFahrenheit <sup class="text-grey">&#8457</sup></h1>
      </div>
     </div>
    </div>

    <div class="text-center">
     <a href="~/">Back to Weather Home Page</a>
    </div>
   }
   else
   {
    <h3>City Code is not valid.</h3>
   }

  </div>

 </div>
</body>
</html>